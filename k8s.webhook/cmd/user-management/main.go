package main

import (
	"fmt"
	"net/http"

	_ "scabarrus.com/k8s.webhook/cmd/user-management/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
	"scabarrus.com/k8s.webhook/internal/service"
)

func helloWorld(w http.ResponseWriter,r *http.Request){
	fmt.Fprintf(w,r.URL.Path)
	fmt.Fprintf(w,r.Method)
}
// @title User-Management API
// @version 1.0
// @description This is a sample serice for managing user and role for kubernetes cluster
// @termsOfService http://swagger.io/terms/
// @contact.name scabarrus
// @contact.email scabarrus@gmail.com
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @BasePath /api/v1/
func main (){
	
	r := mux.NewRouter()
	
	dbm:=service.DBMigrate{}
	r.HandleFunc("/api/admin/db-migrate",dbm.MigrateService).Methods("GET")
	// Manage Users
	userService:=service.UserService{}
	r.HandleFunc("/api/v1/users", userService.FindAll).Methods("GET")
	r.HandleFunc("/api/v1/users", userService.Save).Methods("POST")
	r.HandleFunc("/api/v1/users/{user}", userService.FindByName).Methods("GET")
	r.HandleFunc("/api/v1/users/{user}", userService.Modify).Methods("PUT")
	r.HandleFunc("/api/v1/users/{user}", userService.Delete).Methods("DELETE")
	
	// Manage Groups
	groupService:=service.GroupService{}
	r.HandleFunc("/api/v1/groups", groupService.FindAll).Methods("GET")
	r.HandleFunc("/api/v1/groups", groupService.Save).Methods("POST")
	r.HandleFunc("/api/v1/groups/{group}", groupService.FindByName).Methods("GET")
	r.HandleFunc("/api/v1/groups/{group}", groupService.Modify).Methods("PUT")
	r.HandleFunc("/api/v1/groups/{group}", groupService.Delete).Methods("DELETE")

	//Manage user's group
	groupMemberService:=service.GroupMemberService{}
	r.HandleFunc("/api/v1/groups/{group}/users", groupMemberService.FindAll).Methods("GET")
	r.HandleFunc("/api/v1/groups/{group}/members", groupMemberService.Save).Methods("POST")
	r.HandleFunc("/api/v1/groups/{group}/members/{member}", groupMemberService.FindByName).Methods("GET")
	r.HandleFunc("/api/v1/groups/{group}/members/{member}", groupMemberService.Delete).Methods("DELETE")

	
	// Manage Roles
	roleService:=service.RoleService{}
	r.HandleFunc("/api/v1/roles", roleService.FindAll).Methods("GET")
	r.HandleFunc("/api/v1/roles", roleService.Save).Methods("POST")
	r.HandleFunc("/api/v1/roles/{role}", roleService.FindByName).Methods("GET")
	r.HandleFunc("/api/v1/roles/{role}", roleService.Modify).Methods("PUT")
	r.HandleFunc("/api/v1/roles/{role}", roleService.Delete).Methods("DELETE")

	roleMemberService:=service.RoleMemberService{}
	r.HandleFunc("/api/v1/roles/{role}/members", roleMemberService.FindAll).Methods("GET")
	r.HandleFunc("/api/v1/roles/{role}/members", roleMemberService.Save).Methods("POST")
	r.HandleFunc("/api/v1/roles/{role}/members/{member}", roleMemberService.FindByName).Methods("GET")
	r.HandleFunc("/api/v1/roles/{role}/members/{member}", roleMemberService.Delete).Methods("DELETE")
	
	r.PathPrefix("/swagger").Handler(httpSwagger.WrapHandler)
    http.ListenAndServe(":9443", r)
}
